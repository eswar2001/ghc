name:                 lens
version:              5.1.1
visibility:           public
id:
    lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917

key:
    lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917

license:              BSD-2-Clause
copyright:            Copyright (C) 2012-2016 Edward A. Kmett
maintainer:           Edward A. Kmett <ekmett@gmail.com>
author:               Edward A. Kmett
stability:            provisional
homepage:             http://github.com/ekmett/lens/
synopsis:             Lenses, Folds and Traversals
description:
    This package comes \"Batteries Included\" with many useful lenses for the types
    commonly used from the Haskell Platform, and with tools for automatically
    generating lenses and isomorphisms for user-supplied data types.

    The combinators in @Control.Lens@ provide a highly generic toolbox for composing
    families of getters, folds, isomorphisms, traversals, setters and lenses and their
    indexed variants.

    An overview, with a large number of examples can be found in the <https://github.com/ekmett/lens#lens-lenses-folds-and-traversals README>.

    An introductory video on the style of code used in this library by Simon Peyton Jones is available from <http://skillsmatter.com/podcast/scala/lenses-compositional-data-access-and-manipulation Skills Matter>.

    A video on how to use lenses and how they are constructed is available on <http://youtu.be/cefnmjtAolY?hd=1 youtube>.

    Slides for that second talk can be obtained from <http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf comonad.com>.

    More information on the care and feeding of lenses, including a brief tutorial and motivation
    for their types can be found on the <https://github.com/ekmett/lens/wiki lens wiki>.

    A small game of @pong@ and other more complex examples that manage their state using lenses can be found in the <https://github.com/ekmett/lens/blob/master/examples/ example folder>.

    /Lenses, Folds and Traversals/

    With some signatures simplified, the core of the hierarchy of lens-like constructions looks like:


    <<http://i.imgur.com/ALlbPRa.png>>

    <images/Hierarchy.png (Local Copy)>

    You can compose any two elements of the hierarchy above using @(.)@ from the @Prelude@, and you can
    use any element of the hierarchy as any type it linked to above it.

    The result is their lowest upper bound in the hierarchy (or an error if that bound doesn't exist).

    For instance:

    * You can use any 'Traversal' as a 'Fold' or as a 'Setter'.

    * The composition of a 'Traversal' and a 'Getter' yields a 'Fold'.

    /Minimizing Dependencies/

    If you want to provide lenses and traversals for your own types in your own libraries, then you
    can do so without incurring a dependency on this (or any other) lens package at all.

    /e.g./ for a data type:

    > data Foo a = Foo Int Int a

    You can define lenses such as

    > -- bar :: Lens' (Foo a) Int
    > bar :: Functor f => (Int -> f Int) -> Foo a -> f (Foo a)
    > bar f (Foo a b c) = fmap (\a' -> Foo a' b c) (f a)

    > -- quux :: Lens (Foo a) (Foo b) a b
    > quux :: Functor f => (a -> f b) -> Foo a -> f (Foo b)
    > quux f (Foo a b c) = fmap (Foo a b) (f c)

    without the need to use any type that isn't already defined in the @Prelude@.

    And you can define a traversal of multiple fields with 'Control.Applicative.Applicative':

    > -- traverseBarAndBaz :: Traversal' (Foo a) Int
    > traverseBarAndBaz :: Applicative f => (Int -> f Int) -> Foo a -> f (Foo a)
    > traverseBarAndBaz f (Foo a b c) = Foo <$> f a <*> f b <*> pure c

    What is provided in this library is a number of stock lenses and traversals for
    common haskell types, a wide array of combinators for working them, and more
    exotic functionality, (/e.g./ getters, setters, indexed folds, isomorphisms).

category:             Data, Lenses, Generics
abi:                  e169b7c75dd0cb1a3a16bff1f021f754
exposed:              True
exposed-modules:
    Control.Exception.Lens Control.Lens Control.Lens.At
    Control.Lens.Combinators Control.Lens.Cons Control.Lens.Each
    Control.Lens.Empty Control.Lens.Equality Control.Lens.Extras
    Control.Lens.Fold Control.Lens.Getter Control.Lens.Indexed
    Control.Lens.Internal Control.Lens.Internal.Bazaar
    Control.Lens.Internal.ByteString Control.Lens.Internal.CTypes
    Control.Lens.Internal.Context Control.Lens.Internal.Deque
    Control.Lens.Internal.Exception Control.Lens.Internal.FieldTH
    Control.Lens.Internal.Fold Control.Lens.Internal.Getter
    Control.Lens.Internal.Indexed Control.Lens.Internal.Instances
    Control.Lens.Internal.Iso Control.Lens.Internal.Level
    Control.Lens.Internal.List Control.Lens.Internal.Magma
    Control.Lens.Internal.Prism Control.Lens.Internal.PrismTH
    Control.Lens.Internal.Profunctor Control.Lens.Internal.Review
    Control.Lens.Internal.Setter Control.Lens.Internal.TH
    Control.Lens.Internal.Zoom Control.Lens.Iso Control.Lens.Lens
    Control.Lens.Level Control.Lens.Operators Control.Lens.Plated
    Control.Lens.Prism Control.Lens.Profunctor Control.Lens.Reified
    Control.Lens.Review Control.Lens.Setter Control.Lens.TH
    Control.Lens.Traversal Control.Lens.Tuple Control.Lens.Type
    Control.Lens.Unsound Control.Lens.Wrapped Control.Lens.Zoom
    Control.Monad.Error.Lens Control.Parallel.Strategies.Lens
    Control.Seq.Lens Data.Array.Lens Data.Bits.Lens
    Data.ByteString.Lazy.Lens Data.ByteString.Lens
    Data.ByteString.Strict.Lens Data.Complex.Lens Data.Data.Lens
    Data.Dynamic.Lens Data.HashSet.Lens Data.IntSet.Lens Data.List.Lens
    Data.Map.Lens Data.Sequence.Lens Data.Set.Lens Data.Text.Lazy.Lens
    Data.Text.Lens Data.Text.Strict.Lens Data.Tree.Lens
    Data.Typeable.Lens Data.Vector.Generic.Lens Data.Vector.Lens
    GHC.Generics.Lens Language.Haskell.TH.Lens Numeric.Lens
    Numeric.Natural.Lens System.Exit.Lens System.FilePath.Lens
    System.IO.Error.Lens

hidden-modules:       Control.Lens.Internal.Prelude
import-dirs:
    /home/doug/code/ghc/test-jsem/ghc-9.5.20220525/lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917/lib

library-dirs:
    /home/doug/code/ghc/test-jsem/ghc-9.5.20220525/lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917/lib

dynamic-library-dirs:
    /home/doug/code/ghc/test-jsem/ghc-9.5.20220525/lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917/lib

data-dir:
    /home/doug/code/ghc/test-jsem/ghc-9.5.20220525/lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917/share

hs-libraries:
    HSlens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917

depends:
    array-0.5.4.0
    assoc-1.0.2-43178e679ad43d5cc902054fe097405ae0dc62a074e9ade5dec5f9f4813da1c7
    base-4.16.0.0
    base-orphans-0.8.6-3df389de8b2fe83c133332d1f843f25d4a883772215acc7e59e66bf5ea9b2bcc
    bifunctors-5.5.12-accc936ee36e13cc140432e413bd827b30f08957d77326668fdbcaeb81ba11ae
    bytestring-0.11.3.0
    call-stack-0.4.0-0ce986fd770b684380033a7b7ab6132c94e9898531ed43e6f87d7d72677dc210
    comonad-5.0.8-7fc7a95b38b8b99cc43b924d457184e2bd69e701f57b40d31f2ca4ff757789aa
    containers-0.6.5.1
    contravariant-1.5.5-265923254210eee5e17fb9749af5b191f0404267a2b3432c4b41be2c68e0743e
    distributive-0.6.2.1-c2074f7e843ad696c96b680dfc04e674b71ba8d62b4683e719fe9259b980ce7f
    exceptions-0.10.4 filepath-1.4.2.1
    free-5.1.8-92476d5790d59b0c327d1e12db44a17873cad7a21f0db0aace4d9479075cebef
    ghc-prim-0.8.0
    hashable-1.4.0.2-a9439a2c596bfe829ec44bfdc1fdbf931e5e07ff8101aac2a9e3f6661f8a6ff7
    indexed-traversable-0.1.2-09bccd3e21277af1917becf6aa72a1c7791c5364e4f98f27ba5e4d2e68ee77d9
    indexed-traversable-instances-0.1.1-286494b2f4180aff98a1bd11218dab42273af5cad4119d9a05782cad417dec9a
    kan-extensions-5.2.4-e4b7fbf9d6bb44ad7eab79011690191b051222c7e4d35481c290c9b1013a27c6
    mtl-2.2.2
    parallel-3.2.2.0-b996cbcc6edac2a4254fcec12b6c0e6b3aa70506bece1f5f1b17b6b298a56c8d
    profunctors-5.6.2-e93959bfbcb6eafbcda7ca9f357d665b78e4c66227e2213fb8671e648cc67d61
    reflection-2.1.6-98b04df02474d89c8767809390dd7e6485751d2c96cb632af1b9937578becf75
    semigroupoids-5.3.7-56505fddf665f3314804d5afa8d6371873b3131e536f338bbd22591632af90d3
    strict-0.4.0.1-265fc202fc73f97106d76febeeddbd988877d9b55874a44fddc4817c8a58e3ab
    tagged-0.8.6.1-565a8159c5b13523d7d4e4309b17c8b542a6a499095bbf284f7a94123b0d4697
    template-haskell-2.18.0.0 text-2.0
    th-abstraction-0.4.3.0-8ebdacf28b7477cb04ba7295915030cadb4e31a9e5737cd53b851e6bb293caa1
    these-1.1.1.1-9179b57438a3bf0d43b63d483c67e829dc03c2847d901d43eb8424cd11922467
    transformers-0.5.6.2
    transformers-compat-0.7.1-381e2c63f0f96b837d1fdced12151ed0ecd1c5f82068033ee23e98097106cf81
    unordered-containers-0.2.19.1-9f401e1a249c73e6a148743a1c7be1e945e4f493639a6d46cb61a5fe4bcc60f5
    vector-0.12.3.1-3909336e342eed01a0d45234925d9a3f4d4090bf5df1d17b32d61fdd0626ed1b

haddock-interfaces:
    /home/doug/code/ghc/test-jsem/ghc-9.5.20220525/lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917/share/doc/html/lens.haddock

haddock-html:
    /home/doug/code/ghc/test-jsem/ghc-9.5.20220525/lens-5.1.1-eaff989d8554fe30c1b11af63b0bc7f178c39b7869269dfd393a6f684c760917/share/doc/html
