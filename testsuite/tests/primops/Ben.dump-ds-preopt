
==================== Desugar (before optimization) ====================
2023-09-19 16:22:12.5377082 UTC

Result size of Desugar (before optimization)
  = {terms: 14, types: 51, coercions: 21, joins: 0/1}

Rec {
-- RHS size: {terms: 13, types: 40, coercions: 21, joins: 0/1}
foo :: forall {s} a. a -> State# s -> (# Int#, State# s #)
[LclIdX]
foo
  = \ (@s_al6) (@a_al7) ->
      let {
        irred_ale :: GHC.Prim.SmallRep# (TupleRep [IntRep, ZeroBitRep])
        [LclId]
        irred_ale
          = (CO: <TupleRep [IntRep, ZeroBitRep]>_N)
            `cast` (Sub (Sym (AxSmallRep# (<TupleRep [IntRep, ZeroBitRep]>_N)))
                    :: (TupleRep [IntRep, ZeroBitRep]
                        GHC.Prim.~# TupleRep [IntRep, ZeroBitRep])
                       ~R# GHC.Prim.SmallRep# (TupleRep [IntRep, ZeroBitRep])) } in
      \ (x_akF :: a_al7) (s0_akG :: State# s_al6) ->
        keepAlive#
          @(TupleRep [IntRep, ZeroBitRep])
          @Lifted
          @a_al7
          @s_al6
          @(# Int#, State# s_al6 #)
          irred_ale
          x_akF
          s0_akG
          (\ (s1_akH :: State# s_al6) -> (# 42#, s1_akH #))
end Rec }


