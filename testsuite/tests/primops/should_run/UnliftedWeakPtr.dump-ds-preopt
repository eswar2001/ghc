
==================== Desugar (before optimization) ====================
2023-09-19 16:23:01.4144104 UTC

Result size of Desugar (before optimization)
  = {terms: 176, types: 382, coercions: 21, joins: 0/0}

Rec {
-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$dShow_aUr :: Show Int
[LclId]
$dShow_aUr = $dShow_aT6

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$dShow_aTc :: Show Int
[LclId]
$dShow_aTc = $dShow_aT6

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$dShow_aT6 :: Show Int
[LclId]
$dShow_aT6 = GHC.Show.$fShowInt

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$dMonad_aTr :: Monad IO
[LclId]
$dMonad_aTr = GHC.Base.$fMonadIO

-- RHS size: {terms: 0, types: 0, coercions: 21, joins: 0/0}
irred_aTT :: GHC.Prim.SmallRep# (TupleRep [ZeroBitRep, LiftedRep])
[LclId]
irred_aTT
  = (CO: <TupleRep [ZeroBitRep, LiftedRep]>_N)
    `cast` (Sub (Sym (AxSmallRep# (<TupleRep
                                      [ZeroBitRep, LiftedRep]>_N)))
            :: (TupleRep [ZeroBitRep, LiftedRep]
                GHC.Prim.~# TupleRep [ZeroBitRep, LiftedRep])
               ~R# GHC.Prim.SmallRep# (TupleRep [ZeroBitRep, LiftedRep]))

-- RHS size: {terms: 2, types: 2, coercions: 0, joins: 0/0}
$dShow_aUy :: Show [String]
[LclId]
$dShow_aUy = GHC.Show.$fShowList @[Char] $dShow_aUH

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
$dShow_aUH :: Show [Char]
[LclId]
$dShow_aUH = GHC.Show.$fShowList @Char $dShow_aUI

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$dShow_aUI :: Show Char
[LclId]
$dShow_aUI = GHC.Show.$fShowChar

-- RHS size: {terms: 12, types: 16, coercions: 0, joins: 0/0}
finalise
  :: MVar# RealWorld String
     -> State# RealWorld -> (# State# RealWorld, () #)
[LclIdX]
finalise
  = \ (mvar_aKR :: MVar# RealWorld String)
      (s0_aKS :: State# RealWorld) ->
      case putMVar#
             @Lifted
             @RealWorld
             @String
             mvar_aKR
             (unpackCString# "finalised!"#)
             s0_aKS
      of s1_aKT
      { __DEFAULT ->
      (# s1_aKT, GHC.Tuple.Prim.() #)
      }

-- RHS size: {terms: 58, types: 110, coercions: 0, joins: 0/0}
inner
  :: MVar# RealWorld String
     -> MutVar# RealWorld Bool
     -> State# RealWorld
     -> (# State# RealWorld, Res #)
[LclIdX]
inner
  = \ (mvar_aKH :: MVar# RealWorld String)
      (u_aKI :: MutVar# RealWorld Bool)
      (s0_aKJ :: State# RealWorld) ->
      case newByteArray# @RealWorld 42# s0_aKJ of ds_dVZ { __DEFAULT ->
      case ds_dVZ of wild_00 { (# s1_aKK, ba#_aKL #) ->
      case mkWeak#
             @Unlifted
             @Unlifted
             @(MutVar# RealWorld Bool)
             @(MutableByteArray# RealWorld)
             @()
             u_aKI
             ba#_aKL
             (finalise mvar_aKH)
             s1_aKK
      of ds_dW1
      { __DEFAULT ->
      case ds_dW1 of wild_00 { (# s2_aKM, wk_aKN #) ->
      case deRefWeak#
             @Unlifted @(MutableByteArray# RealWorld) wk_aKN s2_aKM
      of ds_dW3
      { __DEFAULT ->
      case ds_dW3 of wild_00 { (# s3_aKO, i_aKP, ba'#_aKQ #) ->
      (# s3_aKO,
         (\ (ds_dW5 :: Weak# (MutableByteArray# RealWorld))
            (ds_dW6 :: [String]) ->
            Main.Res ds_dW5 ds_dW6)
           wk_aKN
           (build
              @String
              (\ (@a_dW9) (c_dWa :: String -> a_dW9 -> a_dW9) (n_dWb :: a_dW9) ->
                 c_dWa
                   (show
                      @Int
                      $dShow_aT6
                      ((\ (ds_dW7 :: Int#) -> GHC.Types.I# ds_dW7) i_aKP))
                   (c_dWa
                      (show
                         @Int
                         $dShow_aTc
                         ((\ (ds_dW8 :: Int#) -> GHC.Types.I# ds_dW8)
                            (sizeofMutableByteArray# @RealWorld ba'#_aKQ)))
                      n_dWb))) #)
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 83, types: 194, coercions: 0, joins: 0/0}
main :: IO ()
[LclIdX]
main
  = >>=
      @IO
      $dMonad_aTr
      @[String]
      @()
      ((\ (@a_aAl)
          (ds_dWc :: State# RealWorld -> (# State# RealWorld, a_aAl #)) ->
          GHC.Types.IO @a_aAl ds_dWc)
         @[String]
         (\ (s0_aAn :: State# RealWorld) ->
            case newMVar# @Lifted @RealWorld @String s0_aAn of ds_dWd
            { __DEFAULT ->
            case ds_dWd of wild_00 { (# s1_aAo, mvar_aAp #) ->
            case newMutVar# @Lifted @Bool @RealWorld GHC.Types.False s1_aAo
            of ds_dWf
            { __DEFAULT ->
            case ds_dWf of wild_00 { (# s2_aAq, val_var_aAr #) ->
            case keepAlive#
                   @(TupleRep [ZeroBitRep, LiftedRep])
                   @Unlifted
                   @(MutVar# RealWorld Bool)
                   @RealWorld
                   @(# State# RealWorld, Res #)
                   irred_aTT
                   val_var_aAr
                   s2_aAq
                   (inner mvar_aAp val_var_aAr)
            of ds_dWh
            { __DEFAULT ->
            case ds_dWh of wild_00 { (# s3_aAs, ds_dWy #) ->
            case ds_dWy of wild_00 { Res wk_aAt strs_aAu ->
            case unIO @() performGC s3_aAs of ds_dWk { __DEFAULT ->
            case ds_dWk of wild_00 { (# s4_aAw, ds_dWx #) ->
            case deRefWeak#
                   @Unlifted @(MutableByteArray# RealWorld) wk_aAt s4_aAw
            of ds_dWn
            { __DEFAULT ->
            case ds_dWn of wild_00 { (# s5_aAx, j_aAy, ds_dWw #) ->
            case takeMVar# @Lifted @RealWorld @String mvar_aAp s5_aAx of ds_dWq
            { __DEFAULT ->
            case ds_dWq of wild_00 { (# s6_aAz, r_aAA #) ->
            (# s6_aAz,
               ++
                 @String
                 strs_aAu
                 (build
                    @String
                    (\ (@a_dWt) (c_dWu :: String -> a_dWt -> a_dWt) (n_dWv :: a_dWt) ->
                       c_dWu
                         (show
                            @Int
                            $dShow_aUr
                            ((\ (ds_dWs :: Int#) -> GHC.Types.I# ds_dWs) j_aAy))
                         (c_dWu r_aAA n_dWv))) #)
            }
            }
            }
            }
            }
            }
            }
            }
            }
            }
            }
            }
            }))
      (\ (res_aHG :: [String]) -> print @[String] $dShow_aUy res_aHG)

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
:Main.main :: IO ()
[LclIdX]
:Main.main = GHC.TopHandler.runMainIO @() main
end Rec }


