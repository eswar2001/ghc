
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 71, types: 40, coercions: 0, joins: 0/0}

Rec {
-- RHS size: {terms: 4, types: 3, coercions: 0, joins: 0/0}
T13143.$wf [InlPrag=NOINLINE, Occ=LoopBreaker]
  :: forall {a}. (# #) -> a
[GblId, Arity=1, Str=<B>b{sBp->S}, Cpr=b, Unf=OtherCon []]
T13143.$wf
  = \ (@a_sBm) _ [Occ=Dead] -> T13143.$wf @a_sBm GHC.Prim.(##)
end Rec }

-- RHS size: {terms: 4, types: 3, coercions: 0, joins: 0/0}
f [InlPrag=NOINLINE[final]] :: forall a. Int -> a
[GblId,
 Arity=1,
 Str=<B>b{sBp->S},
 Cpr=b,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@a_sBm) _ [Occ=Dead] -> T13143.$wf @a_sBm GHC.Prim.(##)}]
f = \ (@a_sBm) _ [Occ=Dead] -> T13143.$wf @a_sBm GHC.Prim.(##)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 0}]
T13143.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T13143.$trModule3 = GHC.Types.TrNameS T13143.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 30 0}]
T13143.$trModule2 = "T13143"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T13143.$trModule1 = GHC.Types.TrNameS T13143.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T13143.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 10 10}]
T13143.$trModule
  = GHC.Types.Module T13143.$trModule3 T13143.$trModule1

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
lvl_rBN :: Int
[GblId, Str=b{sBp->S}, Cpr=b]
lvl_rBN = T13143.$wf @Int GHC.Prim.(##)

Rec {
-- RHS size: {terms: 28, types: 7, coercions: 0, joins: 0/0}
T13143.$wg [InlPrag=[2], Occ=LoopBreaker]
  :: Bool -> Bool -> GHC.Prim.Int# -> GHC.Prim.Int#
[GblId[StrictWorker([!, !])],
 Arity=3,
 Str=<1L><1L><L>,
 Unf=OtherCon []]
T13143.$wg
  = \ (ds_sBr :: Bool) (ds1_sBs :: Bool) (ww_sBv :: GHC.Prim.Int#) ->
      case ds_sBr of {
        False ->
          case ds1_sBs of {
            False -> T13143.$wg GHC.Types.False GHC.Types.True ww_sBv;
            True -> GHC.Prim.+# ww_sBv 1#
          };
        True ->
          case ds1_sBs of {
            False -> T13143.$wg GHC.Types.True GHC.Types.True ww_sBv;
            True -> case lvl_rBN of wild2_00 { }
          }
      }
end Rec }

-- RHS size: {terms: 14, types: 6, coercions: 0, joins: 0/0}
g [InlPrag=[2]] :: Bool -> Bool -> Int -> Int
[GblId,
 Arity=3,
 Str=<1L><1L><1!P(L)>,
 Cpr=1,
 Unf=Unf{Src=StableSystem, TopLvl=True,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_sBr [Occ=Once1] :: Bool)
                 (ds1_sBs [Occ=Once1] :: Bool)
                 (p_sBt [Occ=Once1!] :: Int) ->
                 case p_sBt of { GHC.Types.I# ww_sBv [Occ=Once1] ->
                 case T13143.$wg ds_sBr ds1_sBs ww_sBv of ww1_sBA [Occ=Once1]
                 { __DEFAULT ->
                 GHC.Types.I# ww1_sBA
                 }
                 }}]
g = \ (ds_sBr :: Bool) (ds1_sBs :: Bool) (p_sBt :: Int) ->
      case p_sBt of { GHC.Types.I# ww_sBv ->
      case T13143.$wg ds_sBr ds1_sBs ww_sBv of ww1_sBA { __DEFAULT ->
      GHC.Types.I# ww1_sBA
      }
      }



