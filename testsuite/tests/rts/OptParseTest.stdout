=== OptParseTest START ===

(TEST) input: -?
0: (null) ? SAFE

(TEST) input: --install-signal-handlers
1: install-signal-handlers (null) UNSAFE
	value: true

(TEST) input: --install-signal-handlers=yes
1: install-signal-handlers (null) UNSAFE
	value: true

(TEST) input: --install-signal-handlers=no
1: install-signal-handlers (null) UNSAFE
	value: false

(TEST) input: --install-seh-handlers
2: install-seh-handlers (null) UNSAFE
	value: true

(TEST) input: --install-seh-handlers=yes
2: install-seh-handlers (null) UNSAFE
	value: true

(TEST) input: --install-seh-handlers=no
2: install-seh-handlers (null) UNSAFE
	value: false

(TEST) input: --generate-stack-traces
3: generate-stack-traces (null) UNSAFE
	value: true

(TEST) input: --generate-stack-traces=yes
3: generate-stack-traces (null) UNSAFE
	value: true

(TEST) input: --generate-stack-traces=no
3: generate-stack-traces (null) UNSAFE
	value: false

(TEST) input: --generate-crash-dumps
4: generate-crash-dumps (null) UNSAFE
	value: true

(TEST) input: --generate-crash-dumps=yes
4: generate-crash-dumps (null) UNSAFE
	value: true

(TEST) input: --generate-crash-dumps=no
4: generate-crash-dumps (null) UNSAFE
	value: false

(TEST) input: --null-eventlog-writer
5: null-eventlog-writer (null) UNSAFE
	value: true

(TEST) input: --null-eventlog-writer=yes
5: null-eventlog-writer (null) UNSAFE
	value: true

(TEST) input: --null-eventlog-writer=no
5: null-eventlog-writer (null) UNSAFE
	value: false

(TEST) input: --machine-readable
6: machine-readable (null) UNSAFE
	value: true

(TEST) input: --machine-readable=yes
6: machine-readable (null) UNSAFE
	value: true

(TEST) input: --machine-readable=no
6: machine-readable (null) UNSAFE
	value: false

(TEST) input: --disable-delayed-os-memory-return
7: disable-delayed-os-memory-return (null) UNSAFE
	value: true

(TEST) input: --disable-delayed-os-memory-return=yes
7: disable-delayed-os-memory-return (null) UNSAFE
	value: true

(TEST) input: --disable-delayed-os-memory-return=no
7: disable-delayed-os-memory-return (null) UNSAFE
	value: false

(TEST) input: --internal-counters
8: internal-counters (null) SAFE
	value: true

(TEST) input: --internal-counters=yes
8: internal-counters (null) SAFE
	value: true

(TEST) input: --internal-counters=no
8: internal-counters (null) SAFE
	value: false

(TEST) input: --io-manager=native
9: io-manager (null) UNSAFE
	value: 0

(TEST) input: --io-manager=posix
9: io-manager (null) UNSAFE
	value: 1

(TEST) input: --info
10: info (null) SAFE

(TEST) input: --eventlog-flush-interval=606.909
11: eventlog-flush-interval (null) SAFE
	value: 606.909000

(TEST) input: --eventlog-flush-interval=0.125
11: eventlog-flush-interval (null) SAFE
	value: 0.125000

(TEST) input: --copying-gc
12: copying-gc (null) SAFE

(TEST) input: --nonmoving-gc
13: nonmoving-gc (null) SAFE

(TEST) input: --large-object-allocation=8193K
14: large-object-allocation AL UNSAFE
	value: 2048

(TEST) input: --large-object-allocation=2M
14: large-object-allocation AL UNSAFE
	value: 512

(TEST) input: -AL9G
14: large-object-allocation AL UNSAFE
	value: 2359296

(TEST) input: -AL0.125G
14: large-object-allocation AL UNSAFE
	value: 32768

(TEST) input: -AL3333w
14: large-object-allocation AL UNSAFE
	value: 6

(TEST) input: --minimum-allocation-area-size=8193K
15: minimum-allocation-area-size A UNSAFE
	value: 2048

(TEST) input: --minimum-allocation-area-size=2M
15: minimum-allocation-area-size A UNSAFE
	value: 512

(TEST) input: -A9G
15: minimum-allocation-area-size A UNSAFE
	value: 2359296

(TEST) input: -A0.125G
15: minimum-allocation-area-size A UNSAFE
	value: 32768

(TEST) input: -A3333w
15: minimum-allocation-area-size A UNSAFE
	value: 6

(TEST) input: --io-manager-threads=1
17: io-manager-threads (null) UNSAFE
	value: 1

(TEST) input: --io-manager-threads=1234567
17: io-manager-threads (null) UNSAFE
	value: 1234567

(TEST) input: --numa
18: numa (null) SAFE
	value: 18446744073709551615

(TEST) input: --numa=1
18: numa (null) SAFE
	value: 1

(TEST) input: --numa=1234567
18: numa (null) SAFE
	value: 1234567

(TEST) input: --debug-numa=1
19: debug-numa (null) SAFE
	value: 1

(TEST) input: --debug-numa=8
19: debug-numa (null) SAFE
	value: 8

(TEST) input: --long-gc-sync=606.909
20: long-gc-sync (null) SAFE
	value: 606.909000

(TEST) input: --long-gc-sync=0.125
20: long-gc-sync (null) SAFE
	value: 0.125000

(TEST) input: --no-automatic-heap-samples
21: no-automatic-heap-samples (null) UNSAFE
	value: true

(TEST) input: --no-automatic-heap-samples=yes
21: no-automatic-heap-samples (null) UNSAFE
	value: true

(TEST) input: --no-automatic-heap-samples=no
21: no-automatic-heap-samples (null) UNSAFE
	value: false

(TEST) input: --alloc-area-chunksize=16M
22: alloc-area-chunksize n UNSAFE
	value: 4096

(TEST) input: -n16m
22: alloc-area-chunksize n UNSAFE
	value: 4096

(TEST) input: --alloc-area-chunksize=1234567
22: alloc-area-chunksize n UNSAFE
	value: 301

(TEST) input: -n1239999
22: alloc-area-chunksize n UNSAFE
	value: 302

(TEST) input: --alloc-area-chunksize=0.225G
22: alloc-area-chunksize n UNSAFE
	value: 58982

(TEST) input: -n99999999k
22: alloc-area-chunksize n UNSAFE
	value: 24999999

(TEST) input: --alloc-area-chunksize=7654W
22: alloc-area-chunksize n UNSAFE
	value: 14

(TEST) input: -n4567w
22: alloc-area-chunksize n UNSAFE
	value: 8

(TEST) input: -B
16: gc-bell B UNSAFE

(TEST) input: --gc-bell
16: gc-bell B UNSAFE

(TEST) input: --compact-gc
23: compact-gc c UNSAFE
	value: 0.000000

(TEST) input: -c
23: compact-gc c UNSAFE
	value: 0.000000

(TEST) input: --compact-gc=1125
23: compact-gc c UNSAFE
	value: 1125.000000

(TEST) input: -c
23: compact-gc c UNSAFE
	value: 0.000000

=== OptParseTest END ===
