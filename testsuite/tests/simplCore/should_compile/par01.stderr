
==================== CorePrep ====================
Result size of CorePrep
  = {terms: 31, types: 34, coercions: 0, joins: 0/0}

Rec {
-- RHS size: {terms: 16, types: 27, coercions: 0, joins: 0/0}
Par01.depth [Occ=LoopBreaker] :: GHC.Types.Int -> GHC.Types.Int
[GblId, Arity=1, Str=<L>, Unf=OtherCon []]
Par01.depth
  = \ (d :: GHC.Types.Int) ->
      case GHC.Prim.spark#
             @GHC.Types.Int @GHC.Prim.RealWorld d GHC.Prim.realWorld#
      of
      { (# ipv [Occ=Once1], _ [Occ=Dead] #) ->
      case Par01.depth d of sat [Occ=Once1] { __DEFAULT ->
      case (# ipv, sat #) of { (# _ [Occ=Dead], ipv3 [Occ=Once1] #) ->
      ipv3
      }
      }
      }
end Rec }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Par01.$trModule4 :: GHC.Prim.Addr#
[GblId, Unf=OtherCon []]
Par01.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Par01.$trModule3 :: GHC.Types.TrName
[GblId, Unf=OtherCon []]
Par01.$trModule3 = GHC.Types.TrNameS Par01.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Par01.$trModule2 :: GHC.Prim.Addr#
[GblId, Unf=OtherCon []]
Par01.$trModule2 = "Par01"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Par01.$trModule1 :: GHC.Types.TrName
[GblId, Unf=OtherCon []]
Par01.$trModule1 = GHC.Types.TrNameS Par01.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Par01.$trModule :: GHC.Types.Module
[GblId, Unf=OtherCon []]
Par01.$trModule
  = GHC.Types.Module Par01.$trModule3 Par01.$trModule1



