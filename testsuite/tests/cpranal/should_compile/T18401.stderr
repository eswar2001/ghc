
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 52, types: 86, coercions: 0, joins: 0/0}

Rec {
-- RHS size: {terms: 18, types: 24, coercions: 0, joins: 0/0}
T18401.$w$spoly_$wgo :: forall {a}. a -> [a] -> (# [a] #)
T18401.$w$spoly_$wgo
  = \ (@a_s18a) (sc_s18b :: a_s18a) (sc1_s18c :: [a_s18a]) ->
      case sc1_s18c of {
        [] -> (# GHC.Types.[] @a_s18a #);
        : y_a176 ys_a177 -> (# GHC.Types.: @a_s18a sc_s18b (case T18401.$w$spoly_$wgo @a_s18a y_a176 ys_a177 of { (# ww_s18h #) -> ww_s18h }) #)
      }
end Rec }

-- RHS size: {terms: 17, types: 22, coercions: 0, joins: 0/0}
si :: forall a. [a] -> (Bool, [a])
si
  = \ (@a_s17g) (xs0_s17h :: [a_s17g]) ->
      case xs0_s17h of {
        [] -> (GHC.Types.False, GHC.Types.[] @a_s17g);
        : y_a176 ys_a177 -> (GHC.Types.True, case T18401.$w$spoly_$wgo @a_s17g y_a176 ys_a177 of { (# ww_s18h #) -> ww_s18h })
      }

-- RHS size: {terms: 14, types: 19, coercions: 0, joins: 0/0}
safeInit :: forall a. [a] -> Maybe [a]
safeInit
  = \ (@a_aJ9) (xs_apj :: [a_aJ9]) ->
      case xs_apj of {
        [] -> GHC.Maybe.Nothing @[a_aJ9];
        : y_a176 ys_a177 -> GHC.Maybe.Just @[a_aJ9] (case T18401.$w$spoly_$wgo @a_aJ9 y_a176 ys_a177 of { (# ww_s18h #) -> ww_s18h })
      }



