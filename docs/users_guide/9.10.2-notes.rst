.. _release-9-10-1:

Version 9.10.2
==============
The significant changes to the various parts of the compiler are listed in the
following sections. See the `migration guide
<https://gitlab.haskell.org/ghc/ghc/-/wikis/migration/9.10>`_ on the GHC Wiki
for specific guidance on migrating programs to this release.

Language
~~~~~~~~



Compiler
~~~~~~~~

- Optimized lowering of BigNat# literals. (#23942, !12179)

- Fixed a bug where the jump shortcutting optimization could lead to unsoundness in pattern matching. (#24507)

- Look for haskell symbols only in relevant libraries. (#23415)

  When dynamically loading a Haskell symbol (typical when running a splice or
  GHCi expression), before this change we would search for the symbol in
  all dynamic libraries that were loaded. However, this could be very
  inefficient when too many packages are loaded (which can happen if there are
  many package dependencies) because the time to lookup the would be
  linear in the number of packages loaded.

  In one measurement, this improved performance for executing a GHCi expression
  from ~38 seconds down to ~2s.

- Fixed a bug that could cause a linker error when `TypeData` and `StrictData`
  where used in combination. (#24620)

- The flag :ghc-flag:`-fprof-late` when combined with `-prof` will no longer prevent top level
  constructors from being statically allocated.

  It used to be the case that we would add a cost centre for bindings like `foo = Just bar`.
  This turned the binding into a caf that would allocate the constructor on first evaluation.

  However without the cost centre `foo` can be allocated at compile time. This reduces code-bloat and
  reduces overhead for short-running applications.

  The tradeoff is that calling `whoCreated` on top level value definitions like `foo` will be less informative.

- IPE profiling - optimize the representation of some internal representations. Leading to smaller executables. (#24504)

- Fixed an issue where `-Wmissing-home-modules` caused quadratic compile time increases. (#24778)

- Fixed a crash when using `-prof` with `-forig-thunk-info`. (#24809)

- Better type inference in certain situations. (#24810)

JavaScript backend
~~~~~~~~~~~~~~~~~~

- Changes for better support of the Google Closure Compiler (#24602, !12330)

WebAssembly backend
~~~~~~~~~~~~~~~~~~~

- wasm: use scheduler.postTask() for context switch when available

- The in tree gmp library now is configured to produce faster and smaller code given
  the current constraints of the wasm backend. (!12592)

GHCi
~~~~

- When using XDG directories ``.ghci_history`` now uses the ``$XDG_DATA_HOME`` variable as expected. (#24266)

- Replaced some uses of lists with Arrays for better performance during bytecode compilation.

- GHCi: support cross-module inlining of breakpoints. Fixing #24712

Runtime system
~~~~~~~~~~~~~~

- Memory return logic now uses live bytes rather than live blocks to measure the size of the heap.
  This primarily affects the non-moving GC, which should now be more willing to return memory to the OS.
  Users who have fine-tuned the :rts-flag:`-F ⟨factor⟩`, :rts-flag:`-Fd ⟨factor⟩`, or :rts-flag:`-O ⟨size⟩` flags,
  and use the non-moving GC, should see if adjustments are needed in light of this change.

- Reduce fragmentation incurred by the nonmoving GC's segment allocator. In one application this reduced resident set size by 26%. See :ghc-ticket:`24150`.

- Emit warning when -M < -H.

Build system and packaging
~~~~~~~~~~~~~~~~~~~~~~~~~~

- Escape argument strings when storing them in the settings file. Fixes #24265

- Updated autoconf scripts to commit 948ae97ca5703224bd3eada06b7a69f40dd15a02 (dated 2024-01-01).
  (From https://git.savannah.gnu.org/cgit/config.git/)

- GHC now distinguishes more between the Cmm and C preprocessor. The new flags
  `-pgmCmmP` and `-optCmmP` can be used to control
  the Cmm preprocessor. C preprocessor flags will still be passed to the Cmm
  preprocessor, expect for -g flags which have special handling. Fixes #24474

- Bindists: Fixed a bug in the Makefile which caused windows installs to duplicate files. (#24800)



``base`` library
~~~~~~~~~~~~~~~~




``ghc-prim`` library
~~~~~~~~~~~~~~~~~~~~


``ghc`` library
~~~~~~~~~~~~~~~

- Added some utility functions to `GHC.Data.SmallArray`

``ghc-heap`` library
~~~~~~~~~~~~~~~~~~~~

- Fix typo in ghc-heap cbits that caused compilation errors when assertions were enabled.

``ghc-experimental`` library
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


``template-haskell`` library
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Included libraries
~~~~~~~~~~~~~~~~~~

The package database provided with this distribution also contains a number of
packages other than GHC itself. See the changelogs provided with these packages
for further change information.
