sm_lock_held "the storage manager lock is held";

may_take_sm_lock "the storage manager lock may be taken"
    -> !sm_lock_held;

may_call_sm  "the storage manager may be called (either the lock or the gc allocation spinlock is held)"
    -> sm_lock_held | gc_block_alloc_spin_held;

sharing_sm_lock "the storage manager lock is held by the GC and mediated via gc_block_alloc_spin_held"
    -> sm_lock_held;

gc_block_alloc_spin_held "gc_block_alloc_spin is held"
    -> sharing_sm_lock;

stable_ptr_lock_held "the stable pointer lock is held";

.enforce "Storage.c";
.enforce "GC.c";
.enforce "MarkWeak.c";
.enforce "Weak.c";
.enforce "Evac.c";
.enforce "Scav.c";
.enforce "GCUtils.c";
.enforce "BlockAlloc.c";
.enforce "Schedule.c";
.enforce "RaiseAsync.c";
.enforce "StablePtr.c";
